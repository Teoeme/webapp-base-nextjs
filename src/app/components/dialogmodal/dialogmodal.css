/*   Open state of the dialog  */
dialog[open] {
  opacity: 1;
  transform: scaleX(1) translateX(0px);
  background-color: rgb(var(--color-border));
  transition: transform 0.6s ease,
  opacity 0.6s 0.2s ease,
  display 0.6s ease-in allow-discrete
  ;
}

/*   Closed state of the dialog   */
dialog {
  opacity: 0;
  background-color: rgb(var(--color-border));
  transform: scaleX(0) translateX(300vw);
  overflow: hidden;
  transition:
    opacity 0.6s ease-out,
    transform 0.6s 0s ease-in,
    overlay 0.6s ease-out allow-discrete,
    display 0.6s ease-out allow-discrete;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog[open] {
    opacity: 0;
    transform: scaleX(0) translateX(-300vw);
    overflow: hidden;
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition:
    display 0.7s allow-discrete,
    overlay 0.7s allow-discrete,
    background-color 0.7s,
    backdrop-filter 0.7s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 25%);
  backdrop-filter: blur(3px);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}